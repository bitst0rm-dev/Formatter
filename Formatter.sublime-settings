{
    // Enable debug mode to view errors in the console; [type: bool]
    "debug": false,

    // Auto open the console panel whenever formatting failed; [type: bool]
    // This is especially useful when combined with "debug": true,
    "open_console_on_failure": false,

    // Display results on the status bar; [type: bool]
    "show_statusbar": true,

    // Specify the layout when opening new files; [type: str]
    // This setting will be applied when the "new_file_on_format" option is enabled.
    // You have the choice between a 2-columns, 2-rows or single layout.
    // To revert to the Sublime default layout:
    // View > Layout > Single or use the keyboard shortcut: Command+Alt+1
    // Accepted values: "2cols", "2rows", "single" or false
    "layout": "2cols",

    // A set of directories where executable programs are located; [type: dict{str:list[str]}]
    // It can be absolute paths to module directories, python zipfiles.
    // Any environment variables like PATH, PYTHONPATH, GEM_PATH, TMPDIR etc.
    // can be added here.
    // This option is similar to running 'export PYTHONPATH="/path/to/my/site-packages"'
    // from terminal. But it is only temporary in the memory and will only apply
    // for the current formatting session.
    // Non-existent environment directories and files will be silently ignored.
    // This option can be ommitted, but for python and ruby you probably need
    // to add it, either permanently via ~/.bashrc, ~/.zshrc, ~/.profile or here.
    "environ": {
        "PATH": [],
        "GEM_PATH": [],
        "PYTHONPATH": []
    },

    // Plugins settings
    "formatters": {
        "example": {
            // Disable and remove plugin from being shown in the menu; [type: bool]
            "disable": false,

            // Auto formatting whenever the current file/view is being saved; [type: bool]
            // For safety reasons, newly formatted codes will be finally saved
            // after the next save demand.
            // This option should be used for plugins with unique syntaxes.
            // For plugins with the same syntaxes, the first plugin takes precedence.
            // Remove the identical syntaxes from one of the plugins to avoid conflicts.
            // For example:
            // Plugin A (enabled): syntaxes ["css", "js"]
            // Plugin B (enabled): syntaxes ["html", "css"]
            // In the case you want to use Plugin B with "css", then you should remove the "css"
            // from plugin A, because plugin A will run first in range of this/yours setting file.
            "format_on_save": false,

            // Create a new file containing formatted codes; [type: str]
            // The value of this option is the suffix of the new file being renamed.
            // Suffix must be of type string. =true, =false and all other types imply =false
            // Note: It will overwrite any existing file that has the same new name in
            // the same location.
            // For example:
            // "new_file_on_format": "min", will create a new file:
            // myfile.raw.js -> myfile.raw.min.js
            "new_file_on_format": false,

            // Recursively format the entire folder with unlimited depth; [type: dict{str:(bool|list[str])}]
            // This option requires an existing and currently opened file
            // to serve as the starting point.
            // For the sake of convenience, two new folders will be created at
            // the same level as the file, which will contain all failed and
            // successfully formatted files. The "new_file_on_format" option
            // might be useful for renaming if needed.
            // The "format_on_save" option above, which applies only to
            // single files, does not take effect here.
            // All none-text files (binary) will be automatically ignored.
            // Note: Placing files directly on the Desktop or elsewhere without
            // enclosing them within a folder can lead to accidental formatting.
            // Any literal "$" must be escaped to "\\$" to distinguish it from
            // the variable expansion "${...}". This important rule applies
            // to the entire content of this settings file!
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": ["Spotlight-V100", "temp", "cache", "logs", "^_.*?tits\\$"],
                "exclude_files_regex": ["show_tits.sx", ".*?ball.js", "^._.*?"],
                "exclude_extensions": ["DS_Store", "localized", "TemporaryItems", "Trashes", "db", "ini", "git", "svn", "tmp", "bak"],
                "exclude_syntaxes": []
            },

            // Syntax support based on the scope name, not file extension; [type: list[str]]
            // Syntax name is part of the scope name and can be retrieved from:
            // Tools > Developer > Show Scope Name
            // End-users are advised to consult plugin documentation to add more syntaxes.
            "syntaxes": ["css", "js", "php"],

            // Path to the interpreter to be used; [type: str]
            // Just for the sake of completeness, but it is unlikely that you will
            // ever need to use this option. Most programs you install are usually set
            // to run in the global environment, such as Python, Node.js, Ruby, PHP, etc.
            // However, this option might be useful when you have several versions
            // of the same program installed on your system. Even in such cases,
            // it is still recommended to use the "environ" option mentioned above,
            // along with the PATH variable, to handle this situation.
            "interpreter_path": "${HOME}/example/path/to\\$my/java.exe",

            // Path to the plugin executable to be used; [type: str]
            // System variable expansions like ${HOME} and Sublime Text specific
            // ${packages}, ${file_path} etc. can be used to assign paths. More:
            // https://www.sublimetext.com/docs/build_systems.html#variables
            // Note: Again, any literal "$" must be escaped to "\\$" to distinguish
            // it from the variable expansion "${...}".
            "executable_path": "${HOME}/example/path/to\\$my/php-cs-fixer.phar",

            // Path to the config file for each individual syntaxes; [type: dict{str:str}]
            // Syntax keys must match those in the "syntaxes" option above.
            // A single config file can be used to assign to all syntaxes.
            // In this case the key must be named: "default"
            // Formatter provides a set of default config files under
            // "formatter.assets/config" folder for your personal use.
            // Do not use the reference files with suffix '.master.' directly.
            // These files could be overwritten by any release updates.
            "config_path": {
                "css": "${packages}/User/formatter.assets/config/only_css_rc.json",
                "php": "${packages}/User/formatter.assets/config/only_php_rc.json",
                "default": "${packages}/User/formatter.assets/config/css_plus_js_plus_php_rc.json"
            },

            // Array of additional arguments for the command line; [type: list[str]]
            "args": ["--basedir", "./example/my/baseball", "--show-tits", "yes"],

            // Manipulate hardcoded command-line arguments; [type: list[list[str]]]
            // This option allow you to modify hardcoded parameters, values and
            // their positions without digging into the source code.
            // Note: Hardcoded args can be changed (rarely) by any release updates.
            // Enable debug mode will help to find all current hardcoded args.
            // Use "args" option above to add, this option to remove or manipulate.
            // Using regex: Again, any literal "$" must be escaped to "\\$" to
            // distinguish it from the variable expansion "${...}". Accepted args:
            // [search, [replace, [index, count, new position]]], where:
            // - search: type:str (regex)
            // - replace: type:str
            // - index: type:int (the number is known as a list index); required!
            // - count: type:int (the matching occurrences per index, 0 = all); required!
            // - position: type:int (move old index pos. to new/old one, -1 = delete index); required!
            "fix_commands": [
                ["--autocorrect", "--autocorrect-all", 4, 0, 4], // no index pos change
                ["^.*?auto.*\\$", "--with", 4, 1, 5], // using escaped "\\$" regex, move index 4 to pos 5
                ["${packages}/to/old", "${packages}/to/new", 3, 0, 3], // variable expansion, no escaped "$"
                ["css", 5, 0, 7], // replace the value in index 5 with "css", move it to pos 7
                [3, 0 , 4], // just move index 3 to the new pos 4. (count 0 irrelevant)
                [2, 0, -1], // just delete the index 2. (count 0 irrelevant)
                ["--show-tits", "xxx", 2, 0, -1] // enough tits, pop it out. ("xxx", 2, 0 irrelevant)
            ]
        },
        "beautysh": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["bash"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/beautysh_rc.json"
            }
        },
        "black": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["python"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/black_rc.toml"
            }
        },
        "clangformat": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["c", "cs", "c++", "objc", "objc++", "js", "tsx", "jsx", "json", "java", "proto", "protodevel", "td", "sv", "svh", "v", "vh"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/clang_format_llvm_rc.yaml"
            }
        },
        "csscomb": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "sass", "less"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/csscomb_rc.json"
            }
        },
        "eslint": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["js"],
            "executable_path": "",
            "args": ["--resolve-plugins-relative-to", "/path/to/javascript/node_modules"],
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/eslint_rc.json"
            }
        },
        "htmltidy": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["html", "xml"],
            "executable_path": "",
            "config_path": {
                "html": "${packages}/User/formatter.assets/config/htmltidy_html_rc.cfg",
                "xml": "${packages}/User/formatter.assets/config/htmltidy_xml_rc.cfg"
            }
        },
        "jsbeautifier": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["js", "css", "html", "json", "tsx", "vue"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/jsbeautify_rc.json"
            }
        },
        "jsonmax": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["json"],
            /* build-in, no executable */
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/jsonmax_rc.json"
            }
        },
        "perltidy": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["perl"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/perltidy_rc.cfg"
            }
        },
        "phpcsfixer": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["php"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/php_cs_fixer_rc.php"
            }
        },
        "prettier": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "less", "js", "jsx", "json", "html", "graphql", "markdown", "tsx", "vue", "yaml"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettier_rc.json"
            }
        },
        "prettydiffmax": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "less", "js", "jsx", "json", "html", "asp", "xml", "tsx"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettydiffmax_rc.json"
            }
        },
        "prettytable": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["csv", "text"],
            /* build-in, no executable */
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettytable_rc.json"
            }
        },
        "rubocop": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["ruby"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/rubocop_rc.yml"
            }
        },
        "sqlformatter": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["sql"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/sql_formatter_rc.json"
            }
        },
        "stylelint": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "sass", "less", "sss", "sugarss"],
            "executable_path": "",
            "args": ["--config-basedir", "/path/to/javascript/node_modules"],
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/stylelint_rc.json"
            }
        },
        "uncrustify": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["c", "c++", "cs", "objc", "objc++", "d", "java", "pawn", "vala"],
            "executable_path": "",
            "config_path": {
                "objc": "${packages}/User/formatter.assets/config/uncrustify_objc_rc.cfg",
                "objc++": "${packages}/User/formatter.assets/config/uncrustify_objc_rc.cfg",
                "java": "${packages}/User/formatter.assets/config/uncrustify_sun_java_rc.cfg",
                "default": "${packages}/User/formatter.assets/config/uncrustify_rc.cfg"
            }
        },
        "yapf": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["python"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/yapf_rc.yapf"
            }
        },
        "cleancss": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "sass", "less"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/cleancss_rc.json"
            }
        },
        "htmlminifier": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["html", "xml"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/htmlminifier_rc.json"
            }
        },
        "jsonmin": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["json"]
            /* build-in, no config */
        },
        "prettydiffmin": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["css", "scss", "less", "js", "jsx", "json", "html", "asp", "xml", "tsx"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/prettydiffmin_rc.json"
            }
        },
        "pythonminifier": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["python"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/python_minifier_rc.json"
            }
        },
        "sqlmin": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["sql"],
            /* build-in, no executable */
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/sqlmin_rc.json"
            }
        },
        "terser": {
            "disable": false,
            "format_on_save": false,
            "new_file_on_format": false,
            "recursive_folder_format": {
                "enable": false,
                "exclude_folders_regex": [],
                "exclude_files_regex": [],
                "exclude_extensions": [],
                "exclude_syntaxes": []
            },
            "syntaxes": ["js"],
            "executable_path": "",
            "config_path": {
                "default": "${packages}/User/formatter.assets/config/terser_rc.json"
            }
        }
    }
}
